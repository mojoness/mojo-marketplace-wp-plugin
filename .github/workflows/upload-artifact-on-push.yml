name: Build Plugin

on:
  push:
    branches:
      - master

jobs:
  build:
    name: On Push to Master
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Package Name
        id: package
        env:
          REPO: ${{ github.repository }}
        run: echo ::set-output name=PACKAGE::${REPO##*/}

      - name: PHP version
        run: php --version

      - name: Set Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Node version
        run: node --version

      - name: NPM version
        run: npm --version

      - name: Get npm cache directory
        id: npm-cache
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: npm install
        run: npm install

      - name: Run build
        run: npx webpack && npx webpack -p

      - name: Generate .pot file
        run: npm run i18n

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer vendor directory
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install PHP Dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --no-dev --optimize-autoloader

      - name: Remove development files
        run: .github/scripts/cleanup.sh

      - name: List Files
        run: ls -lah

      - uses: actions/upload-artifact@v1
        with:
          name: ${{ steps.package.outputs.PACKAGE }}
          path: ./
